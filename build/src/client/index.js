(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * createContestControl(controlData)
 * Creates a button using the data specified, and returns it to the caller.
 * @author Gigabyte Giant (2015)
 * @param {Object} controlData: The JSON object containing the data for the control (such as display text and where the control should link to)
 * @returns {jQuery} contestControl: The jQuery object containing the newly created contest control
 */
"use strict";

var createContestControl = function createContestControl(controlData) {
    var contestControl = $("<a>").addClass("waves-effect").addClass("waves-light").addClass("amber").addClass("darken-2").addClass("btn").addClass("contest-control").text(controlData.text).attr("href", controlData.link === undefined ? null : controlData.link);

    return contestControl;
};

/**
 * createContestDetails(contestData)
 * Creates a "contest details" div, and returns it to the caller.
 * @author Gigabyte Giant (2015)
 * @param {Object} contestData: A JSON object containing the data for a contest.
 * @returns {jQuery} contestDetails: The jQuery object containing the "contest details" div.
 */
var createContestDetails = function createContestDetails(contestData) {
    var contestDetails = $("<div>").addClass("col").addClass("s9").append($("<h5>").text(contestData.title)).append($("<div>").html(contestData.description));

    return contestDetails;
};

/**
 * createContestHolder(contestData)
 * Creates a "contest holder" div, and returns it to the caller.
 * @author Gigabyte Giant (2015)
 * @param {Object} contestData: A JSON object containing the data for a contest.
 * @returns {jQuery} contestHolder: The jQuery object containing the "contest holder" div.
 */
var createContestHolder = function createContestHolder(contestData) {
    var contestHolder = $("<div>").addClass("section").append($("<div>").addClass("col").addClass("s3").append($("<img>").attr("src", contestData.thumbnail).addClass("responsive-img")).append($("<div>").addClass("center").append(createContestControl({
        text: "View Entries"
    })).append(createContestControl({
        text: "Leaderboard"
    })))).append(createContestDetails(contestData));

    return contestHolder;
};

var setupPage = function setupPage() {
    for (var i = 0; i < 32; i++) {
        $(".container").append($("<div>").addClass("row").append(createContestHolder({
            title: "Contest: Some contest",
            description: "This is a contest. Do something, and win a prize!",
            thumbnail: "http://newlitfromeurope.org/wp-content/uploads/2015/05/placeholder1.gif"
        }))).append($("<div>").addClass("divider"));
    }
};

setupPage();

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvQnJ5bmRlbi9zcmMvS0EtQ29udGVzdC1KdWRnaW5nLVN5c3RlbS9zcmMvY2xpZW50L2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FDT0EsSUFBSSxvQkFBb0IsR0FBRyxTQUF2QixvQkFBb0IsQ0FBWSxXQUFXLEVBQUU7QUFDN0MsUUFBSSxjQUFjLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUN4QixRQUFRLENBQUMsY0FBYyxDQUFDLENBQ3hCLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FDdkIsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUNqQixRQUFRLENBQUMsVUFBVSxDQUFDLENBQ3BCLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FDZixRQUFRLENBQUMsaUJBQWlCLENBQUMsQ0FDM0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FDdEIsSUFBSSxDQUFDLE1BQU0sRUFBRyxXQUFXLENBQUMsSUFBSSxLQUFLLFNBQVMsR0FBRyxJQUFJLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBRSxDQUFDOztBQUU5RSxXQUFPLGNBQWMsQ0FBQztDQUN6QixDQUFDOzs7Ozs7Ozs7QUFTRixJQUFJLG9CQUFvQixHQUFHLFNBQXZCLG9CQUFvQixDQUFZLFdBQVcsRUFBRTtBQUM3QyxRQUFJLGNBQWMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQzFCLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FDZixRQUFRLENBQUMsSUFBSSxDQUFDLENBQ2QsTUFBTSxDQUNILENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUNwQyxDQUNBLE1BQU0sQ0FDSCxDQUFDLENBQUMsT0FBTyxDQUFDLENBQ0wsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FDckMsQ0FBQzs7QUFFTixXQUFPLGNBQWMsQ0FBQztDQUN6QixDQUFDOzs7Ozs7Ozs7QUFTRixJQUFJLG1CQUFtQixHQUFHLFNBQXRCLG1CQUFtQixDQUFZLFdBQVcsRUFBRTtBQUM1QyxRQUFJLGFBQWEsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUM3QyxNQUFNLENBQ0gsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQ3BDLE1BQU0sQ0FDSCxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLENBQzNFLENBQ0EsTUFBTSxDQUNILENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQ3hCLE1BQU0sQ0FDSCxvQkFBb0IsQ0FBQztBQUNqQixZQUFJLEVBQUUsY0FBYztLQUN2QixDQUFDLENBQ0wsQ0FDQSxNQUFNLENBQ0gsb0JBQW9CLENBQUM7QUFDakIsWUFBSSxFQUFFLGFBQWE7S0FDdEIsQ0FBQyxDQUNMLENBQ1IsQ0FDUixDQUNBLE1BQU0sQ0FDSCxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsQ0FDcEMsQ0FBQzs7QUFFTixXQUFPLGFBQWEsQ0FBQztDQUN4QixDQUFDOztBQUVGLElBQUksU0FBUyxHQUFHLFNBQVosU0FBUyxHQUFjO0FBQ3ZCLFNBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDekIsU0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLE1BQU0sQ0FDbEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FDckIsTUFBTSxDQUNILG1CQUFtQixDQUFDO0FBQ2hCLGlCQUFLLEVBQUUsdUJBQXVCO0FBQzlCLHVCQUFXLEVBQUUsbURBQW1EO0FBQ2hFLHFCQUFTLEVBQUUseUVBQXlFO1NBQ3ZGLENBQUMsQ0FDTCxDQUNSLENBQ0EsTUFBTSxDQUNILENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQ2pDLENBQUM7S0FDTDtDQUNKLENBQUM7O0FBRUYsU0FBUyxFQUFFLENBQUMiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLyoqXG4gKiBjcmVhdGVDb250ZXN0Q29udHJvbChjb250cm9sRGF0YSlcbiAqIENyZWF0ZXMgYSBidXR0b24gdXNpbmcgdGhlIGRhdGEgc3BlY2lmaWVkLCBhbmQgcmV0dXJucyBpdCB0byB0aGUgY2FsbGVyLlxuICogQGF1dGhvciBHaWdhYnl0ZSBHaWFudCAoMjAxNSlcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb250cm9sRGF0YTogVGhlIEpTT04gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGRhdGEgZm9yIHRoZSBjb250cm9sIChzdWNoIGFzIGRpc3BsYXkgdGV4dCBhbmQgd2hlcmUgdGhlIGNvbnRyb2wgc2hvdWxkIGxpbmsgdG8pXG4gKiBAcmV0dXJucyB7alF1ZXJ5fSBjb250ZXN0Q29udHJvbDogVGhlIGpRdWVyeSBvYmplY3QgY29udGFpbmluZyB0aGUgbmV3bHkgY3JlYXRlZCBjb250ZXN0IGNvbnRyb2xcbiAqL1xudmFyIGNyZWF0ZUNvbnRlc3RDb250cm9sID0gZnVuY3Rpb24oY29udHJvbERhdGEpIHtcbiAgICB2YXIgY29udGVzdENvbnRyb2wgPSAkKFwiPGE+XCIpXG4gICAgICAgIC5hZGRDbGFzcyhcIndhdmVzLWVmZmVjdFwiKVxuICAgICAgICAuYWRkQ2xhc3MoXCJ3YXZlcy1saWdodFwiKVxuICAgICAgICAuYWRkQ2xhc3MoXCJhbWJlclwiKVxuICAgICAgICAuYWRkQ2xhc3MoXCJkYXJrZW4tMlwiKVxuICAgICAgICAuYWRkQ2xhc3MoXCJidG5cIilcbiAgICAgICAgLmFkZENsYXNzKFwiY29udGVzdC1jb250cm9sXCIpXG4gICAgICAgIC50ZXh0KGNvbnRyb2xEYXRhLnRleHQpXG4gICAgICAgIC5hdHRyKFwiaHJlZlwiLCAoY29udHJvbERhdGEubGluayA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGNvbnRyb2xEYXRhLmxpbmspKTtcblxuICAgIHJldHVybiBjb250ZXN0Q29udHJvbDtcbn07XG5cbi8qKlxuICogY3JlYXRlQ29udGVzdERldGFpbHMoY29udGVzdERhdGEpXG4gKiBDcmVhdGVzIGEgXCJjb250ZXN0IGRldGFpbHNcIiBkaXYsIGFuZCByZXR1cm5zIGl0IHRvIHRoZSBjYWxsZXIuXG4gKiBAYXV0aG9yIEdpZ2FieXRlIEdpYW50ICgyMDE1KVxuICogQHBhcmFtIHtPYmplY3R9IGNvbnRlc3REYXRhOiBBIEpTT04gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGRhdGEgZm9yIGEgY29udGVzdC5cbiAqIEByZXR1cm5zIHtqUXVlcnl9IGNvbnRlc3REZXRhaWxzOiBUaGUgalF1ZXJ5IG9iamVjdCBjb250YWluaW5nIHRoZSBcImNvbnRlc3QgZGV0YWlsc1wiIGRpdi5cbiAqL1xudmFyIGNyZWF0ZUNvbnRlc3REZXRhaWxzID0gZnVuY3Rpb24oY29udGVzdERhdGEpIHtcbiAgICB2YXIgY29udGVzdERldGFpbHMgPSAkKFwiPGRpdj5cIilcbiAgICAgICAgLmFkZENsYXNzKFwiY29sXCIpXG4gICAgICAgIC5hZGRDbGFzcyhcInM5XCIpXG4gICAgICAgIC5hcHBlbmQoXG4gICAgICAgICAgICAkKFwiPGg1PlwiKS50ZXh0KGNvbnRlc3REYXRhLnRpdGxlKVxuICAgICAgICApXG4gICAgICAgIC5hcHBlbmQoXG4gICAgICAgICAgICAkKFwiPGRpdj5cIilcbiAgICAgICAgICAgICAgICAuaHRtbChjb250ZXN0RGF0YS5kZXNjcmlwdGlvbilcbiAgICAgICAgKTtcblxuICAgIHJldHVybiBjb250ZXN0RGV0YWlscztcbn07XG5cbi8qKlxuICogY3JlYXRlQ29udGVzdEhvbGRlcihjb250ZXN0RGF0YSlcbiAqIENyZWF0ZXMgYSBcImNvbnRlc3QgaG9sZGVyXCIgZGl2LCBhbmQgcmV0dXJucyBpdCB0byB0aGUgY2FsbGVyLlxuICogQGF1dGhvciBHaWdhYnl0ZSBHaWFudCAoMjAxNSlcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb250ZXN0RGF0YTogQSBKU09OIG9iamVjdCBjb250YWluaW5nIHRoZSBkYXRhIGZvciBhIGNvbnRlc3QuXG4gKiBAcmV0dXJucyB7alF1ZXJ5fSBjb250ZXN0SG9sZGVyOiBUaGUgalF1ZXJ5IG9iamVjdCBjb250YWluaW5nIHRoZSBcImNvbnRlc3QgaG9sZGVyXCIgZGl2LlxuICovXG52YXIgY3JlYXRlQ29udGVzdEhvbGRlciA9IGZ1bmN0aW9uKGNvbnRlc3REYXRhKSB7XG4gICAgdmFyIGNvbnRlc3RIb2xkZXIgPSAkKFwiPGRpdj5cIikuYWRkQ2xhc3MoXCJzZWN0aW9uXCIpXG4gICAgICAgIC5hcHBlbmQoXG4gICAgICAgICAgICAkKFwiPGRpdj5cIikuYWRkQ2xhc3MoXCJjb2xcIikuYWRkQ2xhc3MoXCJzM1wiKVxuICAgICAgICAgICAgICAgIC5hcHBlbmQoXG4gICAgICAgICAgICAgICAgICAgICQoXCI8aW1nPlwiKS5hdHRyKFwic3JjXCIsIGNvbnRlc3REYXRhLnRodW1ibmFpbCkuYWRkQ2xhc3MoXCJyZXNwb25zaXZlLWltZ1wiKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAuYXBwZW5kKFxuICAgICAgICAgICAgICAgICAgICAkKFwiPGRpdj5cIikuYWRkQ2xhc3MoXCJjZW50ZXJcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlQ29udGVzdENvbnRyb2woe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBcIlZpZXcgRW50cmllc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlQ29udGVzdENvbnRyb2woe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBcIkxlYWRlcmJvYXJkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgKVxuICAgICAgICAuYXBwZW5kKFxuICAgICAgICAgICAgY3JlYXRlQ29udGVzdERldGFpbHMoY29udGVzdERhdGEpXG4gICAgICAgICk7XG5cbiAgICByZXR1cm4gY29udGVzdEhvbGRlcjtcbn07XG5cbnZhciBzZXR1cFBhZ2UgPSBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDMyOyBpKyspIHtcbiAgICAgICAgJChcIi5jb250YWluZXJcIikuYXBwZW5kKFxuICAgICAgICAgICAgJChcIjxkaXY+XCIpLmFkZENsYXNzKFwicm93XCIpXG4gICAgICAgICAgICAgICAgLmFwcGVuZChcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRlQ29udGVzdEhvbGRlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCJDb250ZXN0OiBTb21lIGNvbnRlc3RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRoaXMgaXMgYSBjb250ZXN0LiBEbyBzb21ldGhpbmcsIGFuZCB3aW4gYSBwcml6ZSFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHRodW1ibmFpbDogXCJodHRwOi8vbmV3bGl0ZnJvbWV1cm9wZS5vcmcvd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDUvcGxhY2Vob2xkZXIxLmdpZlwiXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICApXG4gICAgICAgIC5hcHBlbmQoXG4gICAgICAgICAgICAkKFwiPGRpdj5cIikuYWRkQ2xhc3MoXCJkaXZpZGVyXCIpXG4gICAgICAgICk7XG4gICAgfVxufTtcblxuc2V0dXBQYWdlKCk7XG4iXX0=
